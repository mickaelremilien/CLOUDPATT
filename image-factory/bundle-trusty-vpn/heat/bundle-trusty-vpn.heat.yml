heat_template_version: 2013-05-23


description: Virtual Private Network Stack


parameters:

  COUNTRY:
    description: COUNTRY for the VPN certificate
    label: certificate VPN COUNTRY
    type: string
    hidden: true
    constraints:
      - length: { min: 6, max: 40 }
        description: COUNTRY must be between 6 and 40 characters

  PROVINCE:
    description: PROVINCE for the VPN certificate
    label: certificate VPN PROVINCE
    type: string
    hidden: true
    constraints:
      - length: { min: 6, max: 40 }
        description: PROVINCE must be between 6 and 40 characters

  CITY:
    description: CITY for the VPN certificate
    label: certificate VPN CITY
    type: string
    hidden: true
    constraints:
      - length: { min: 6, max: 40 }
        description: CITY must be between 6 and 40 characters

  ORGANISATION:
    description: ORGANISATION for the VPN certificate
    label: certificate VPN ORGANISATION
    type: string
    hidden: true
    constraints:
      - length: { min: 6, max: 40 }
        description: ORGANISATION must be between 6 and 40 characters

  EMAIL:
    description: EMAIL for the VPN certificate
    label: certificate VPN EMAIL
    type: string
    hidden: true
    constraints:
      - length: { min: 6, max: 40 }
        description:  EMAIL must be between 6 and 40 characters

  cw_user_password:
    description: Password for the user named cloudwatt
    label: cloudwatt user password
    type: string
    hidden: true
    constraints:
      - length: { min: 6, max: 24 }
        description: Password must be between 6 and 24 characters
  image:
    type: string
    description: Glance Image
    default: "Ubuntu 14.04"

  keypair_name:
    description: Keypair to inject in instance
    label: SSH Keypair
    type: string
    default: mickael

  flavor_name:
    default: s1.cw.small-1
    description: Flavor to use for the deployed instance
    type: string
    label: Instance Type (Flavor)
    constraints:
      - allowed_values:
          - s1.cw.small-1
          - n1.cw.standard-1
          - n1.cw.standard-2
          - n1.cw.standard-4
          - n1.cw.standard-8
          - n1.cw.standard-12
          - n1.cw.standard-16

resources:
  network:
    type: OS::Neutron::Net

  subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network }
      ip_version: 4
      cidr: 10.0.1.0/24
      allocation_pools:
        - { start: 10.0.1.100, end: 10.0.1.199 }

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP, port_range_min: 22, port_range_max: 22 }
        - { direction: ingress, protocol: TCP, port_range_min: 80, port_range_max: 80 }
        - { direction: ingress, protocol: TCP, port_range_min: 443, port_range_max: 443 }
        - { direction: ingress, protocol: UDP, port_range_min: 1194, port_range_max: 1194 }
        - { direction: ingress, protocol: ICMP }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }
        - { direction: egress, protocol: UDP, port_range_min: 1194, port_range_max: 1194 }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: 6ea98324-0f14-49f6-97c0-885d1b8dc517

  set_certificate:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: |
            #!/bin/bash
            sudo mkdir /etc/vpnconf/
            echo -n $COUNTRY$ >> /etc/vpnconf/COUNTRY
            echo -n $PROVINCE$ >> /etc/vpnconf/PROVINCE
            echo -n $CITY$ >> /etc/vpnconf/CITY
            echo -n $ORGANISATION$ >> /etc/vpnconf/ORGANISATION
            echo -n $EMAIL$ >> /etc/vpnconf/EMAIL
          params:
            $COUNTRY$: { get_param: COUNTRY }
            $PROVINCE$: { get_param:PROVINCE }
            $CITY$: { get_param: CITY }
            $ORGANISATION$: { get_param: ORGANISATION }
            $EMAIL$:  { get_param: EMAIL }

  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: keypair_name }
      image:  { get_param: image }
      flavor: { get_param: flavor_name }
      networks:
        - network: { get_resource: network }
      security_groups:
        - { get_resource: security_group }
      user_data_format: RAW
      user_data:
        get_resource: set_certificate |
            #!/usr/bin/env bash
            echo "$(date) - START" >> /var/log/vpn_srv.log
            export DEBIAN_FRONTEND=noninteractive
            apt-get update 2>&1 >> /var/log/vpn_srv.log
            echo "$(date) - update done" >> /var/log/vpn_srv.log
            apt-get -o Dpkg::Options::="--force-confold" upgrade -y 2>&1 >> /var/log/vpn_srv.log
            echo "$(date) - upgrade done" >> /var/log/vpn_srv.log
            apt-get -o Dpkg::Options::="--force-confold" install openvpn -y 2>&1 >> /var/log/vpn_srv.log
            echo "$(date) - openvpn done" >> /var/log/vpn_srv.log
            mkdir /etc/ansible
            echo "[local]" >> /etc/ansible/hosts
            echo "127.0.0.1 ansible_connection=local" >> /etc/ansible/hosts
            cd /home/cloud/
            git clone  https://github.com/mickaelremilien/CLOUDPATT.git
            sudo ansible-playbook /home/cloud/CLOUDPATT/image-factory/bundle-trusty-vpn/ansible/bootstrap.yml

  floating_ip_link:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: server }

outputs:
  floating_ip:
    description: IP address of the deployed compute server
    value: { get_attr: [floating_ip, floating_ip_address] }

  server_id:
    description: ID of the server
    value: {get_resource: server}
