---
#
##
### Written by the CAT (Cloudwatt Automation Team)
##
#
- hosts: all
  become: yes

  vars:
    os_image_factory:
      packer:
        version: "0.8.6"
        zip_url: "https://releases.hashicorp.com/packer/0.8.6/packer_0.8.6_linux_amd64.zip"
      jenkins:
        local_url: "http://127.0.0.1:8080"
        repository: "deb http://pkg.jenkins-ci.org/debian binary/"
        repo_key: "http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key"

  tasks:
    - name: toolkit packages present
      apt: pkg="{{ item }}" state=present
      with_items:
        - aptitude
        - git
        - python-dev
        - python-setuptools

    - name: apt package pip is absent
      apt: pkg=python-pip state=absent purge=yes

    - name: system upgrade
      apt: update_cache=yes upgrade=full

    - name: jenkins key server is known
      apt_key: url="{{ os_image_factory.jenkins.repo_key }}" state=present

    - name: jenkins apt server is known
      apt_repository: repo="{{ os_image_factory.jenkins.repository }}" state=present

    - name: needed packages installed
      apt: update_cache=yes pkg="{{ item }}" state=present
      with_items:
        - libguestfs-tools
        - libffi-dev
        - python-cffi
        - libssl-dev
        - jenkins
        - unzip

    - name: jenkins service is up
      service: name=jenkins state=restarted enabled=yes

    - name: jenkins is kvm member
      user: name=jenkins groups=kvm append=yes

    - name: common aliases
      copy:
        dest=/etc/profile.d/aliases.sh
        content="alias ll=\"ls -aul\""
        owner=root
        group=root
        mode=0644

    - name: default sh is bash
      file: src=/bin/bash dest=/bin/sh state=link

    - name: check packer is installed
      stat: path=/usr/local/bin/packer
      register: packer_bin_check

    - name: setting fact packer_installed
      set_fact:
        packer_installed="{{ packer_bin_check.stat.exists }}"

    - name: checking installed packer version
      when: packer_installed
      shell: "/usr/local/bin/packer --version"
      ignore_errors: true
      register: packer_version

    - name: setting fact need_to_install_packer
      set_fact:
        need_to_install_packer="{{ (not packer_installed) or (packer_version.stdout != os_image_factory.packer.version) }}"

    - name: packer download
      when: need_to_install_packer
      get_url:
        url="{{ os_image_factory.packer.zip_url }}"
        dest=/tmp/packer.zip
        force=no

    - name: packer destination directory is ready
      when: need_to_install_packer
      file:
        path=/usr/local/bin
        state=directory
        owner=root
        group=staff
        mode=0755

    - name: unzip packer
      when: need_to_install_packer
      unarchive:
        src=/tmp/packer.zip
        dest=/usr/local/bin
        copy=no
        owner=root
        group=staff
        mode=0755

    - name: pip is installed
      easy_install: name=pip

    - name: openstack CLI is installed
      pip: name="{{ item }}" state=latest
      with_items:
        - pyopenssl
        - ndg-httpsclient
        - pyasn1
        - pip
      register: result
      until: result|success
      retries: 3
      delay: 2

    - name: openstack CLI is installed
      pip: name="{{ item.name }}" version="{{ item.version }}"
      with_items:
        - { name: os-client-config, version: 1.7.5 }
        - { name: python-glanceclient, version: 1.1.0 }
        - { name: python-novaclient, version: 2.30.0 }
        - { name: python-keystoneclient, version: 1.7.1 }
        - { name: python-neutronclient, version: 3.1.0 }
        - { name: python-heatclient, version: 0.6.0 }
        - { name: python-openstackclient, version: 1.7.0 }
        - { name: python-cinderclient, version: 1.4.0 }
        - { name: python-swiftclient, version: 2.5.0 }
      register: result
      until: result|success
      retries: 3
      delay: 2

    - name: download jenkins CLI jar file
      get_url:
        url="{{ os_image_factory.jenkins.local_url }}/jnlpJars/jenkins-cli.jar"
        dest=/root/jenkins-cli.jar
        force=no
      register: cli_download
      until: cli_download|success
      retries: 10
      delay: 6

    - name: get jenkins plugin list
      shell: "java -jar /root/jenkins-cli.jar -s {{ os_image_factory.jenkins.local_url }} list-plugins | grep -e ')$' | awk '{ print $1 }' | tr \"\n\" \" \""
      register: jenkins_plugins

    - name: install jenkins git plugin and update all installed plugins
      when: jenkins_plugins.stdout
      shell: "java -jar /root/jenkins-cli.jar -s {{ os_image_factory.jenkins.local_url }} install-plugin {{ jenkins_plugins.stdout }} git-client git"

    - name: safe-restart jenkins to apply plugins updates
      shell: "java -jar /root/jenkins-cli.jar -s {{ os_image_factory.jenkins.local_url }} safe-restart"
Status API Training Shop Blog About
