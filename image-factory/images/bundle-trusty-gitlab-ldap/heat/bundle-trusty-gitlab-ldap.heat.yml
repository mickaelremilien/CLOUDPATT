heat_template_version: 2013-05-23


description: All-in-one GitLab LDAP stack


parameters:
  keypair_name:
    description: Keypair to inject in instance
    label: SSH Keypair
    type: string

  volume_size:
    default: 10
    description: Size of Volume for GitLab Storage (Gigabytes)
    label: GitLab Volume Size
    type: number
    constraints:
      - range: { min: 10, max: 10000 }
        description: Volume must be at least 10 gigabytes

  flavor_name:
    default: n1.cw.standard-1
    description: Flavor to use for the deployed instance
    type: string
    label: Instance Type (Flavor)
    constraints:
      - allowed_values:
          - n1.cw.standard-1
          - n1.cw.standard-2
          - n1.cw.standard-4
          - n1.cw.standard-8
          - n1.cw.standard-12
          - n1.cw.standard-16

resources:
  network:
    type: OS::Neutron::Net

  subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network }
      ip_version: 4
      cidr: 10.0.1.0/24
      allocation_pools:
        - { start: 10.0.1.100, end: 10.0.1.199 }

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP, port_range_min: 22, port_range_max: 22 }
        - { direction: ingress, protocol: TCP, port_range_min: 80, port_range_max: 80 }
        - { direction: ingress, protocol: TCP, port_range_min: 8080, port_range_max: 8080 }
        - { direction: ingress, protocol: TCP, port_range_min: 443, port_range_max: 443 }
        - { direction: ingress, protocol: ICMP }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }

  volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
      volume_type: standard
      metadata:
        fs_type: ext4

  volume_attachement:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: server }
      mountpoint: /dev/vdb
      volume_id: { get_resource: volume }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: 6ea98324-0f14-49f6-97c0-885d1b8dc517

  gitlab_config_set:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
        - path: /etc/gitlab/gitlab.rb
          permissions: '0755'
          content:
            str_replace:
              template: |
                external_url "http://$floating_ip$"
                # gitlab_rails['gitlab_ssh_host'] = '$floating_ip$'
                gitlab_rails['gitlab_host'] = '$floating_ip$'
                gitlab_rails['gitlab_email_from'] = 'gitlab@no-reply.com'
                gitlab_rails['gitlab_email_display_name'] = 'GitLab'
                # Volume Storage
                gitlab_rails['gitlab_shell_repos_path'] = '/vdb/gitlab/git-data/repositories'
                gitlab_rails['satellites_path']         = '/vdb/gitlab/git-data/gitlab-satellites'
                gitlab_rails['backup_path']             = '/vdb/gitlab/backups'
                # LDAP
                # For omnibus packages
                gitlab_rails['ldap_enabled'] = true
                gitlab_rails['ldap_servers'] = YAML.load <<-EOS # remember to close this block with 'EOS' below
                main: # 'main' is the GitLab 'provider ID' of this LDAP server
                  label: 'LDAP' # A human-friendly name for your LDAP server.
                  host: 'localhost'
                  port: 389
                  uid: 'uid'
                  method: 'plain' # "tls" or "ssl" or "plain"
                  #bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'
                  #password: '_the_password_of_the_bind_user'

                  # This setting specifies if LDAP server is Active Directory LDAP server.
                  # For non AD servers it skips the AD specific queries.
                  # If your LDAP server is not AD, set this to false.
                  active_directory: false
                  # If allow_username_or_email_login is enabled, GitLab will ignore everything
                  # after the first '@' in the LDAP username submitted by the user on login.
                  # Example: 'jane.doe@example.com' --> 'jane.doe'
                  allow_username_or_email_login: false
                  # To control number of active users on your GitLab,
                  # enable this setting to keep new users blocked until they have been cleared by admin
                  block_auto_created_users: false
                  # Base where we can search for users
                  # Ex. ou=People,dc=gitlab,dc=example
                  base: 'ou=People,dc=devkit,dc=cw'
                  # Filter LDAP users
                  user_filter: ''
                EOS
              params:
                $floating_ip$: { get_attr: [floating_ip, floating_ip_address] }

  prepare_volume:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash
        # GitLab
        sudo mkdir /vdb
        sudo mkfs -t ext4 /dev/vdb
        sudo mount /dev/vdb /vdb
        sudo mkdir /vdb/gitlab
        sudo mkdir /vdb/gitlab/git-data
        sudo mkdir /vdb/gitlab/git-data/repositories
        sudo mkdir /vdb/gitlab/git-data/gitlab-satellites
        sudo mkdir /vdb/gitlab/backups
        sudo gitlab-ctl reconfigure
        # LDAP
        sudo service slapd stop
        sudo mv /var/lib/ldap /vdb/ldap
        sudo mkdir /var/lib/ldap
        sudo mount --bind /vdb/ldap /var/lib/ldap
        sudo service slapd start

  init_gitlab:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: gitlab_config_set }
      - config: { get_resource: prepare_volume }

  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: keypair_name }
      image: $IMAGE$
      flavor: { get_param: flavor_name }
      networks:
        - network: { get_resource: network }
      security_groups:
        - { get_resource: security_group }
      user_data_format: RAW
      user_data:
        get_resource: init_gitlab

  floating_ip_link:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: server }

outputs:
  floating_ip:
    description: IP address of the deployed compute instance
    value: { get_attr: [floating_ip, floating_ip_address] }
