---

- name: Jenkins - apt server key is trusted
  apt_key:
    url="http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key"
    state=present

- name: Jenkins - apt repository server is known
  apt_repository:
    repo="deb http://pkg.jenkins-ci.org/debian binary/"
    state=present

- name: Jenkins - apt cache is up-to-date
  apt: update_cache=yes

- name: Jenkins - packages installed
  apt:
    pkg="{{ item }}"
    state=present
  with_items:
    - python-cffi
    - libssl-dev
    - jenkins
    - unzip
  register: result
  until: result|success
  retries: 10
  delay: 2

- name: Jenkins - default http port is 5000
  lineinfile:
    dest=/etc/default/jenkins
    regexp=^HTTP_PORT=
    line=HTTP_PORT=5000

- name: Jenkins - has '/jenkins' prefix
  lineinfile:
    dest=/etc/default/jenkins
    regexp='^JENKINS_ARGS="(.*)"$'
    line='JENKINS_ARGS="\1 --prefix=/jenkins"'
    backrefs=yes

- name: Jenkins - jenkins service is started/enabled
  service:
    name=jenkins
    state=started
    enabled=yes

- name: Jenkins - CLI jar file downloaded
  get_url:
    url="http://127.0.0.1:5000/jenkins/jnlpJars/jenkins-cli.jar"
    dest=/root/jenkins-cli.jar
    force=no
  register: cli_download
  until: cli_download|success
  retries: 6
  delay: 5

- name: Jenkins - Checking for configuration file
  stat: path=/var/lib/jenkins/config.xml
  register: jenkins_conf

- name: Jenkins - jenkins plugin list
  when: not jenkins_conf.stat.exists
  shell: "java -jar /root/jenkins-cli.jar -s http://127.0.0.1:5000/jenkins list-plugins | grep -e ')$' | awk '{ print $1 }' | tr \"\n\" \" \""
  register: list_plugins_output

- name: Jenkins - jenkins updated
  when: (not jenkins_conf.stat.exists) and list_plugins_output.stdout
  shell: "java -jar /root/jenkins-cli.jar -s http://127.0.0.1:5000/jenkins install-plugin {{ list_plugins_output.stdout }}"

- name: Jenkins - jenkins git plugins installed
  when: not jenkins_conf.stat.exists
  shell: "java -jar /root/jenkins-cli.jar -s http://127.0.0.1:5000/jenkins install-plugin git-client git"

- name: Jenkins - configured for ldap
  when: not jenkins_conf.stat.exists
  copy:
    src=files/jenkins_config.xml
    dest=/var/lib/jenkins/config.xml
    owner=root
    group=root
    mode=0644

- name: Jenkins - jenkins service is safe-restarted
  when: not jenkins_conf.stat.exists
  shell: "java -jar /root/jenkins-cli.jar -s http://127.0.0.1:5000/jenkins safe-restart"
